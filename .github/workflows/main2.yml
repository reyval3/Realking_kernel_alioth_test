name: Kernel Build (alioth) - clang-r547379

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE:
        description: 'Kernel Source'
        default: 'https://github.com/your-repo/kernel-source.git'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Branch'
        default: 'main'
        required: true
      CODENAME:
        description: 'Device Codename'
        default: 'alioth'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Repo'
        default: 'https://github.com/your-repo/AnyKernel3'
        required: false
      UPLOAD_TO_RELEASE:
        description: 'Upload to Release'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y curl git ccache python3 flex bison make bc zip unzip
        sudo apt install -y gcc-aarch64-linux-gnu clang lld lldb

    - name: Set Up Clang Toolchain
      run: |
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
        mkdir clang && tar -xf clang.tar.gz -C clang
        echo "CLANG_PATH=$(pwd)/clang/bin" >> $GITHUB_ENV

    - name: Clone kernel source
      run: |
        if [ -d "kernel" ]; then
          echo "Removing existing kernel directory..."
          rm -rf kernel
        fi
        git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel


    - name: Build Kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER="GitHub"
        export KBUILD_BUILD_HOST="Actions"
        export PATH="$CLANG_PATH:$PATH"
        cd kernel
        make O=out alioth_defconfig
        make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu-

    - name: Package with AnyKernel3
      if: github.event.inputs.ANYKERNEL_URL != ''
      run: |
        git clone --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b main AnyKernel3
        cp kernel/out/arch/arm64/boot/Image.gz AnyKernel3/
        cd AnyKernel3
        zip -r kernel.zip *
        mv kernel.zip ../

    - name: Upload Kernel to Release
      if: github.event.inputs.UPLOAD_TO_RELEASE == 'true'
      uses: softprops/action-gh-release@v2
      with:
        files: kernel.zip
        name: ${{ github.event.inputs.CODENAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: "Kernel build completed successfully."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Kernel Artifact
      uses: actions/upload-artifact@v4
      if: github.event.inputs.UPLOAD_TO_RELEASE != 'true'
      with:
        name: kernel.zip
        path: kernel.zip
