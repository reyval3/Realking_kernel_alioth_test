name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Clang
        run: |
          # Setup Clang as needed
          # Example: If you're downloading Clang from GitHub
          # wget <clang_url> -O clang.tar.gz
          # tar -xvzf clang.tar.gz

      - name: Set up environment variables
        run: |
          echo "MAIN_DIR=${{ github.workspace }}" >> $GITHUB_ENV
          echo "KERNEL_DIR=${{ github.workspace }}/kernel" >> $GITHUB_ENV
          echo "ZIMAGE_DIR=${{ github.workspace }}/kernel/out/arch/arm64/boot" >> $GITHUB_ENV
          echo "BUILD_START=$(date +"%s")" >> $GITHUB_ENV
          echo "CLANG_DIR=${{ github.workspace }}/clang" >> $GITHUB_ENV
          echo "DEVICE=alioth" >> $GITHUB_ENV
          echo "KERNEL_DEFCONFIG=alioth_defconfig" >> $GITHUB_ENV
          echo "DEVICE_NAME1=alioth" >> $GITHUB_ENV
          echo "DEVICE_NAME2=aliothin" >> $GITHUB_ENV
          echo "IS_SLOT_DEVICE=1" >> $GITHUB_ENV
          echo "VENDOR_BOOT_LINES_REMOVED=0" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          # Your build commands go here, using the variables set above.
          # Example: make $KERNEL_DEFCONFIG O=out CC=clang
          # make -j$(nproc --all) O=out CC=clang ARCH=arm64

      - name: Create a GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0-${{ env.DEVICE }}-${{ env.BUILD_START }}
          release_name: "Release for ${{ env.DEVICE }} ${BUILD_START}"
          body: "Kernel release for ${{ env.DEVICE }}"

      - name: Upload Kernel Build to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0-${{ env.DEVICE }}-${{ env.BUILD_START }}
          asset_path: RealKing-${{ env.DEVICE }}-${{ env.CHOICE }}-${BUILD_START}.zip
          asset_name: RealKing-${{ env.DEVICE }}-${{ env.CHOICE }}-${BUILD_START}.zip
          asset_content_type: application/zip
          
      # If you have other files to upload, repeat this step as needed
      - name: Upload tmp.zip to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0-${{ env.DEVICE }}-${{ env.BUILD_START }}
          asset_path: tmp.zip
          asset_name: tmp.zip
          asset_content_type: application/zip
