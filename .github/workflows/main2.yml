name: Kernel Build (alioth) - clang-r547379 noksu

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE:
        description: 'Kernel Tree'
        default: 'https://github.com/re-noroi/Realking_kernel_sm8250.git'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        required: true
        default: 'main'
      CODENAME:
        description: 'Phone Codename'
        default: 'alioth'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/re-noroi/n0kfork-zip-alioth'
        required: false
      ANYKERNEL_BRANCH:
        description: 'AnyKernel Branch (defaults to codename)'
        default: 'main'
        required: false
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0  # Ensure full history is available

    - name: Install prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y curl git wget ccache python3
        sudo apt-get install -y build-essential bc flex bison libssl-dev
        sudo apt-get install -y gcc-aarch64-linux-gnu libfl-dev zip unzip tar gzip

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_ENV
        echo "start_time=$(date +%s)" >> $GITHUB_ENV
        echo "build_title=${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}" >> $GITHUB_ENV

    - name: Download and extract Clang toolchain
      run: |
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
        mkdir clang
        tar -xf clang.tar.gz -C clang
        echo "tools-folder=$(pwd)/clang" >> $GITHUB_ENV
      working-directory: ${{ env.workspace-folder }}

    - name: Clone kernel source with submodules
      run: |
        git clone --recursive --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree
        cd kernel_tree
        git submodule update --init --recursive
        git fetch --unshallow || true  # Convert shallow clone to full history
        echo "kernel-folder=$(pwd)" >> $GITHUB_ENV
      working-directory: ${{ env.workspace-folder }}

    - name: Ensure KernelSU-Next has full history
      run: |
        cd $GITHUB_ENV/kernel-folder/KernelSU-Next
        git fetch --unshallow || true
        export KSU_GIT_VERSION=$(git rev-list --count HEAD)
        echo "KSU_GIT_VERSION=$KSU_GIT_VERSION" >> $GITHUB_ENV

    - name: Build kernel
      run: |
        cd $GITHUB_ENV/kernel-folder
        export ARCH=arm64
        export SUBARCH=ARM64
        export KBUILD_BUILD_USER="renoroi"
        export KBUILD_BUILD_HOST="github"
        export KSU_GIT_VERSION=$KSU_GIT_VERSION
        make O=out alioth_defconfig PATH="$GITHUB_ENV/tools-folder/bin:$PATH"
        make O=out CC=clang -j$(nproc --all) PATH="$GITHUB_ENV/tools-folder/bin:$PATH" CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
        echo "elapsed_time=$(echo "$(date +%s)"-"${{ env.start_time }}" | bc)" >> $GITHUB_ENV

    - name: Upload kernel build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Kernel Build
        path: ${{ env.kernel-folder }}/out/arch/arm64/boot/Image.gz
